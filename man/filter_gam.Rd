% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_gam.R
\name{filter_gam}
\alias{filter_gam}
\title{Adaptive knockoff filter based on GAM (Generalized Additive Model)}
\usage{
filter_gam(
  W,
  U,
  alpha = 0.1,
  offset = 1,
  df_list = 6:10,
  reveal_prop = 0.1,
  mute = TRUE
)
}
\arguments{
\item{W}{vector of length p, denoting the imporatence statistics calculated by \code{\link[knockoff]{knockoff.filter}}.}

\item{alpha}{target FDR level (default is 0.1).}

\item{reveal_prop}{The proportion of hypotheses revealed at intialization (default is 0.5).}

\item{mute}{whether \eqn{\hat{fdp}} of each iteration is printed (defalt is TRUE).}

\item{z}{p-by-r matrix of side information.}

\item{df}{Degree of freedom of the splines (default is 5).}
}
\value{
A list of the following:
 \item{nrejs}{The number of rejections for each specified target fdr (alpha) level}
 \item{rejs}{Rejsction set fot each specified target fdr (alpha) level}
 \item{rej.path}{The order of the hypotheses (used for diagnostics)}
 \item{unrevealed.id}{id of the hypotheses that are nor revealed in the end (used for diagnostics)}
 \item{tau}{Threshold of each target FDR level (used for diagnostics)}
 \item{acc}{The accuracy of classfication at each step (used for diagnostics)}
}
\description{
filter_gam takes the inmportance statistic W as input. The filter determines the order of the statistic by the probability of being a null. The probability is given by GAM.
}
\examples{
#Generating data
p=100;n=100;k=40;
mu = rep(0,p); Sigma = diag(p)
X = matrix(rnorm(n*p),n)
nonzero = 1:k
beta = 5*(1:p\%in\%nonzero)*sign(rnorm(p))/ sqrt(n)
y = X\%*\%beta + rnorm(n,1)

#Generate knockoff copy
Xk = create.gaussian(X,mu,Sigma)

#Generate importance statistic using knockoff package
W = stat.glmnet_coefdiff(X,Xk,y)

#Using filer_gam to obtain the final rejeciton set
z = 1:p #Use the location of the hypotheses as the side information
result = filter_gam(W,z)

}
\seealso{
Other filter: 
\code{\link{filter_EM}()},
\code{\link{filter_glmnet}()},
\code{\link{filter_glm}()},
\code{\link{filter_randomForest_getorder}()},
\code{\link{filter_randomForest}()}
}
\concept{filter}
